# Generated by Django 5.2.4 on 2025-08-27 05:00

import digitalcomicDesk.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('digitalcomicDesk', '0006_episodemodel_content_file_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EpisodeAccess',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source', models.CharField(choices=[('coins', 'Coins'), ('premium', 'Premium')], max_length=16)),
                ('unlocked_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Episode Access',
                'verbose_name_plural': 'Episode Access',
                'ordering': ['-unlocked_at'],
            },
        ),
        migrations.CreateModel(
            name='SliceModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField(help_text='1-based sequential order within the episode')),
                ('file', models.ImageField(upload_to=digitalcomicDesk.models.slice_upload_path)),
                ('width', models.PositiveIntegerField(default=1080, help_text='Pixel width, e.g., 1080')),
                ('height', models.PositiveIntegerField(blank=True, help_text='Pixel height if known', null=True)),
            ],
            options={
                'verbose_name': 'Slice',
                'verbose_name_plural': 'Slices',
                'ordering': ['episode', 'order'],
            },
        ),
        migrations.AlterModelOptions(
            name='comicmodel',
            options={'verbose_name': 'Digital Comic', 'verbose_name_plural': 'Digital Comics'},
        ),
        migrations.AlterModelOptions(
            name='commentmodel',
            options={'ordering': ['-timestamp'], 'verbose_name': 'Comment', 'verbose_name_plural': 'Comments'},
        ),
        migrations.AlterModelOptions(
            name='episodemodel',
            options={'ordering': ['episode_number'], 'verbose_name': 'Episode', 'verbose_name_plural': 'Episodes'},
        ),
        migrations.AddField(
            model_name='commentmodel',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Parent comment for threaded replies (null for top-level)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='digitalcomicDesk.commentmodel'),
        ),
        migrations.AddField(
            model_name='episodemodel',
            name='comments_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='episodemodel',
            name='likes_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='episodemodel',
            name='shares_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='commentmodel',
            name='episode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='digitalcomicDesk.episodemodel'),
        ),
        migrations.AlterField(
            model_name='commentmodel',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='episodemodel',
            name='comic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='digitalcomicDesk.comicmodel'),
        ),
        migrations.AddIndex(
            model_name='comicmodel',
            index=models.Index(fields=['genre'], name='digitalcomi_genre_1693b2_idx'),
        ),
        migrations.AddIndex(
            model_name='commentmodel',
            index=models.Index(fields=['episode'], name='digitalcomi_episode_8f18f0_idx'),
        ),
        migrations.AddIndex(
            model_name='commentmodel',
            index=models.Index(fields=['user'], name='digitalcomi_user_id_5af933_idx'),
        ),
        migrations.AddIndex(
            model_name='commentmodel',
            index=models.Index(fields=['parent'], name='digitalcomi_parent__265b0f_idx'),
        ),
        migrations.AddIndex(
            model_name='episodemodel',
            index=models.Index(fields=['comic', 'episode_number'], name='digitalcomi_comic_i_fa68be_idx'),
        ),
        migrations.AddIndex(
            model_name='episodemodel',
            index=models.Index(fields=['is_locked'], name='digitalcomi_is_lock_99f413_idx'),
        ),
        migrations.AddIndex(
            model_name='episodemodel',
            index=models.Index(fields=['is_free'], name='digitalcomi_is_free_eda1d9_idx'),
        ),
        migrations.AddField(
            model_name='episodeaccess',
            name='episode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_records', to='digitalcomicDesk.episodemodel'),
        ),
        migrations.AddField(
            model_name='episodeaccess',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='digital_episode_access', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='slicemodel',
            name='episode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slices', to='digitalcomicDesk.episodemodel'),
        ),
        migrations.AddIndex(
            model_name='episodeaccess',
            index=models.Index(fields=['user', 'episode'], name='digitalcomi_user_id_21a44b_idx'),
        ),
        migrations.AddIndex(
            model_name='episodeaccess',
            index=models.Index(fields=['episode'], name='digitalcomi_episode_3e10d2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='episodeaccess',
            unique_together={('user', 'episode')},
        ),
        migrations.AddIndex(
            model_name='slicemodel',
            index=models.Index(fields=['episode', 'order'], name='digitalcomi_episode_c6ed44_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='slicemodel',
            unique_together={('episode', 'order')},
        ),
    ]
