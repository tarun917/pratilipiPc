# Generated by Django 5.2.4 on 2025-08-24 16:07

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('storeDesk', '0002_remove_restocknotification_comic_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Unit price considered for this item before per-item discount.', max_digits=10)),
                ('discount_applied', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Discount applied to this line.', max_digits=10)),
                ('final_price', models.DecimalField(decimal_places=2, help_text='Line total after discount = (unit_price * quantity) - discount_applied', max_digits=10)),
            ],
        ),
        migrations.AlterModelOptions(
            name='comic',
            options={'ordering': ('-created_at',)},
        ),
        migrations.AlterModelOptions(
            name='genre',
            options={'ordering': ('-created_at',)},
        ),
        migrations.AlterModelOptions(
            name='order',
            options={'ordering': ('-purchase_date',)},
        ),
        migrations.AlterModelOptions(
            name='promotion',
            options={'ordering': ('-end_date',)},
        ),
        migrations.AlterModelOptions(
            name='promotionredemption',
            options={'ordering': ('-redeemed_at',)},
        ),
        migrations.AlterModelOptions(
            name='review',
            options={'ordering': ('-created_at',)},
        ),
        migrations.AlterModelOptions(
            name='wishlist',
            options={'ordering': ('-added_at',)},
        ),
        migrations.AddField(
            model_name='order',
            name='amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount expected to be paid via gateway for this order.', max_digits=10),
        ),
        migrations.AddField(
            model_name='order',
            name='idempotency_key',
            field=models.CharField(blank=True, help_text='Client-supplied unique key to prevent duplicate order creations.', max_length=64, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_gateway',
            field=models.CharField(choices=[('razorpay', 'Razorpay'), ('none', 'None')], default='none', max_length=16),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_order_id',
            field=models.CharField(blank=True, help_text='Gateway Order ID (e.g., Razorpay order_id).', max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_payment_id',
            field=models.CharField(blank=True, help_text='Gateway Payment ID (e.g., Razorpay payment_id).', max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_signature',
            field=models.CharField(blank=True, help_text='Gateway signature (e.g., Razorpay signature).', max_length=256, null=True),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_status',
            field=models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed')], db_index=True, default='pending', max_length=16),
        ),
        migrations.AddField(
            model_name='order',
            name='quantity',
            field=models.PositiveIntegerField(blank=True, help_text='Quantity for legacy single-item orders. Leave null when using OrderItem rows.', null=True),
        ),
        migrations.AddField(
            model_name='order',
            name='subtotal',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Sum before order-level discounts; for legacy single-item this is unit*qty.', max_digits=10),
        ),
        migrations.AlterField(
            model_name='order',
            name='comic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='storeDesk.comic'),
        ),
        migrations.AlterField(
            model_name='order',
            name='discount_applied',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total discount applied at order level (may include line discounts sum).', max_digits=10),
        ),
        migrations.AlterField(
            model_name='order',
            name='final_price',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Grand total after discounts.', max_digits=10),
        ),
        migrations.AddIndex(
            model_name='comic',
            index=models.Index(fields=['title'], name='storeDesk_c_title_b8f13b_idx'),
        ),
        migrations.AddIndex(
            model_name='comic',
            index=models.Index(fields=['-rating'], name='storeDesk_c_rating_cb3def_idx'),
        ),
        migrations.AddIndex(
            model_name='comic',
            index=models.Index(fields=['stock_quantity'], name='storeDesk_c_stock_q_d85e66_idx'),
        ),
        migrations.AddIndex(
            model_name='comic',
            index=models.Index(fields=['-created_at'], name='storeDesk_c_created_c49c27_idx'),
        ),
        migrations.AddIndex(
            model_name='genre',
            index=models.Index(fields=['name'], name='storeDesk_g_name_91034d_idx'),
        ),
        migrations.AddIndex(
            model_name='genre',
            index=models.Index(fields=['-created_at'], name='storeDesk_g_created_ae870b_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user', '-purchase_date'], name='storeDesk_o_user_id_b71db3_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['payment_status'], name='storeDesk_o_payment_34e4fd_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['promo_code'], name='storeDesk_o_promo_c_e8ffc0_idx'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['code'], name='storeDesk_p_code_e10cd1_idx'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['genre'], name='storeDesk_p_genre_i_1ce4fa_idx'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['comic'], name='storeDesk_p_comic_i_49b79a_idx'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['start_date', 'end_date'], name='storeDesk_p_start_d_fda1d2_idx'),
        ),
        migrations.AddIndex(
            model_name='promotionredemption',
            index=models.Index(fields=['user', '-redeemed_at'], name='storeDesk_p_user_id_002140_idx'),
        ),
        migrations.AddIndex(
            model_name='promotionredemption',
            index=models.Index(fields=['promotion'], name='storeDesk_p_promoti_06f87c_idx'),
        ),
        migrations.AddIndex(
            model_name='promotionredemption',
            index=models.Index(fields=['order'], name='storeDesk_p_order_i_d53a06_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['user', '-created_at'], name='storeDesk_r_user_id_e5fbb1_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['comic', '-created_at'], name='storeDesk_r_comic_i_8cf880_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['-created_at'], name='storeDesk_r_created_3c38a5_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['user', '-added_at'], name='storeDesk_w_user_id_159199_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['comic'], name='storeDesk_w_comic_i_17cd5f_idx'),
        ),
        migrations.AddConstraint(
            model_name='order',
            constraint=models.CheckConstraint(condition=models.Q(('quantity__isnull', True), ('quantity__gte', 1), _connector='OR'), name='order_quantity_null_or_gte_1'),
        ),
        migrations.AddConstraint(
            model_name='order',
            constraint=models.CheckConstraint(condition=models.Q(('discount_applied__gte', 0)), name='order_discount_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='order',
            constraint=models.CheckConstraint(condition=models.Q(('final_price__gte', 0)), name='order_final_price_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='order',
            constraint=models.CheckConstraint(condition=models.Q(('amount__gte', 0)), name='order_amount_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='order',
            constraint=models.CheckConstraint(condition=models.Q(('subtotal__gte', 0)), name='order_subtotal_gte_0'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='comic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='storeDesk.comic'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='storeDesk.order'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order'], name='storeDesk_o_order_i_39489d_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['comic'], name='storeDesk_o_comic_i_fce04f_idx'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.CheckConstraint(condition=models.Q(('quantity__gte', 1)), name='orderitem_quantity_gte_1'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.CheckConstraint(condition=models.Q(('unit_price__gte', 0)), name='orderitem_unit_price_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.CheckConstraint(condition=models.Q(('discount_applied__gte', 0)), name='orderitem_discount_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.CheckConstraint(condition=models.Q(('final_price__gte', 0)), name='orderitem_final_price_gte_0'),
        ),
    ]
